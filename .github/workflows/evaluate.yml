# This is a basic workflow to help you get started with Actions

name: Evaluation Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  evaluate:
    env:
      ACCESS_TOKEN: ${{ secrets.HF_EVAL_ACCESS_TOKEN }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      # If not field github.event.pull_request exists, then do first forloop
      - name: Evaluation
        run: |
          datapercentage=0.01
          if [ ${{ github.event.release }} != "" ]; then
            echo "Private evaluation"
            for d in team_*/ ; do
                python3 -m venv env
                source env/bin/activate
                pip3 install $d
                python3 -c "from huggingface_hub.hf_api import HfFolder; HfFolder.save_token('$ACCESS_TOKEN')"
                cd $d/src
                echo $ACCESS_TOKEN | huggingface-cli login
                python3 evaluate_task_1.py --data_percentage $datapercentage --dtype task1
                python3 evaluate_task_2.py --data_percentage $datapercentage --dtype task2
                python3 evaluation.py --data_percentage $datapercentage --dtype task1 --task 1
                python3 evaluation.py --data_percentage $datapercentage --dtype task2 --task 2
                deactivate
                echo Finished evaluation, exiting
                cd ../..
            done
          else
            echo "Public evaluation"
            for d in team_*/ ; do
                python3 -m venv env
                source env/bin/activate
                pip3 install $d
                cd $d/src
                echo " "
                echo -------------------
                echo |Evaluating task 1|
                echo -------------------
                python3 evaluate_task_1.py --data_percentage $datapercentage --dtype validation
                python3 evaluation.py --data_percentage $datapercentage --dtype validation --task 1
                echo " "
                echo -------------------
                echo |Evaluating task 2|
                echo -------------------
                python3 evaluate_task_2.py --data_percentage $datapercentage --dtype validation
                python3 evaluation.py --data_percentage $datapercentage --dtype validation --task 2
                git add results_task_*.json
                echo " "
                deactivate
                echo Finished evaluation, exiting
                cd ../..
            done
          fi

      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Adding result files generated during evaluation" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ADD_RESULTS_TOKEN }}
          branch: ${{ github.ref }}